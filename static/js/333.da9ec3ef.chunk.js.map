{"version":3,"file":"static/js/333.da9ec3ef.chunk.js","mappings":"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","sources":["components/TrendyMovieList/TrendyMovieList.module.jsx","components/TrendyMovieList/TrendyMovieList.jsx","pages/Movie/Movie.module.jsx","pages/Movie/Movies.jsx","services/movieApi.js"],"sourcesContent":["import styled from '@emotion/styled'\n\n\nexport const List = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    margin-left: auto;\n    margin-right: auto;\n    gap: 75px\n`\n\nexport const ListItem = styled.li`\nposition: relative;\n\n\n\n\ndiv {\n    display: flex;\n    flex-direction: column-reverse;\n    align-items: center;\n    justify-content: flex-start;\n    background-color: #000000;\n    opacity: 0.7;\n    width: 269px;\n    height: 61px;\n    position: absolute;\n    top: 343px;\n}\n\nh3 {\n    position:absolute;\n    padding: 18px;\n    font-size: 16px;\n}\n`\n\nexport const Img = styled.img`\n  width:269px\n\n\n`","import { Link, useLocation } from \"react-router-dom\";\nimport {List,ListItem,Img} from './TrendyMovieList.module'\n\n\n\nconst TrendyMovieList = ({movies}) => {\n\n\n  const location = useLocation();\n  console.log(location)\nreturn ( \n<List>\n  {movies.map(({ id, original_title, poster_path}) => (\n    <ListItem key={id}>\n       <Link state={{ from: location }} to={`/movies/${id}`}>\n          <Img src={`https://image.tmdb.org/t/p/w500/${poster_path}`} alt={original_title}/>  \n            <div>\n              <h3>\n                {original_title}\n              </h3>\n            </div>\n       </Link>\n    </ListItem>\n  ))}\n    \n</List> );\n}\n \nexport default TrendyMovieList;","import styled from '@emotion/styled'\n\nexport const Input = styled.input`\nwidth: 250px;\n    height: 35px;\n    border-radius: 10px;\n    border: none;\n    /* background: #53525d5c; *\n    background-color: #ffffff;\n    opacity: 0.3;\n    box-shadow: 0 4px 12px rgb(173 162 162 / 0%), 0 16px 20px rgba(0,0,0,0.2);\n    margin-bottom: 30px;\n`\n\nexport const Button = styled.button`\n    margin-left: 5px;\n    width: 81px;\n    height: 37px;\n    border-radius: 10px;\n    border: none;\n    font-size: 15px;\n    font-weight: 15px;\n    background-color: #00000040;\n    color: white;\n\n    button:hover {\n\n    }\n\n`\n\n","import { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport TrendyMovieList from \"components/TrendyMovieList/TrendyMovieList\";\nimport { getMovieByName } from \"services/movieApi\";\nimport {Input,Button} from \"./Movie.module\"\n\n\nconst Movies = () => {\n const [movies, setMovies] = useState([]);\n const [query, setQuery] = useState('')\n const [searchParams, setSearchParams] = useSearchParams();\n \n  useEffect(() => {\n    const currentQuery = searchParams.get('query');\n    if (!currentQuery) return;\n\n    const fetchMovieByQuery = async () => {\n        try {\n            const movieByQuery = await getMovieByName(currentQuery)\n            setMovies(movieByQuery)\n        }\n        catch (error) {\n            console.log(error)\n        }\n    }  \n    fetchMovieByQuery()\n},[searchParams])\n\n\n const handleSubmit = e => {\n    e.preventDefault();\n\n    setSearchParams({query});\n}\n\nconst handleSearchParams = ({target: {value}}) => {\n    setQuery(value)\n}\n\n return ( \n <form onSubmit={handleSubmit}>\n <Input \n type=\"text\"\n value={query}\n onChange={handleSearchParams}\n />\n <Button type=\"submit\">Search</Button>\n {movies.length > 0 && <TrendyMovieList movies={movies} />}\n </form> \n );\n}\n \nexport default Movies;","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\nconst API_KEY = '8aba4e3419a44727b7eb66f35fce4fa2'\n\nexport const getTrendyMovies = async() => {\n\n    const {data} = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n    return data.results\n}\n\nexport const getMovieByName = async query => {\n\n    const {data} = await axios.get(`search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`)\n\n    return data.results;\n}\n\n\n\nexport const getMovieById = async movieId => {\n    \n    const {data} = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n\n    return data;\n}\n\nexport const getMovieCast = async movieId => {\n\n    const {data} = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n\n    return data.cast;\n}\n\nexport const getMovieReviews = async (movieId) => {\n\n    const {data} = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`) \n\n    return data.results;\n\n}"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","ListItem","_templateObject2","Img","_templateObject3","_ref","movies","location","useLocation","console","log","_jsx","children","map","_ref2","id","original_title","poster_path","_jsxs","Link","state","from","to","concat","src","alt","Input","Button","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","query","setQuery","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","currentQuery","get","fetchMovieByQuery","_asyncToGenerator","_regeneratorRuntime","_callee","movieByQuery","_context","prev","next","getMovieByName","sent","t0","stop","apply","arguments","onSubmit","e","preventDefault","type","value","onChange","target","length","TrendyMovieList","axios","API_KEY","getTrendyMovies","_yield$axios$get","data","abrupt","results","_callee2","_yield$axios$get2","_context2","_x","getMovieById","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","getMovieCast","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","getMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}